package internal.org.springframework.content.commons.utils;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class MimeToFileExt {
	private static final Map<String, String> mimeMap;
	static {
		Map<String, String> mMap = new HashMap<String, String>();
		mMap.put("application/andrew-inset", "ez");
		mMap.put("application/excel", "xls");
		mMap.put("application/mac-binhex40", "hqx");
		mMap.put("application/mac-compactpro", "cpt");
		mMap.put("application/mathml+xml", "mathml");
		mMap.put("application/msword", "doc");
		mMap.put("application/octet-stream", "bin");
		mMap.put("application/oda", "oda");
		mMap.put("application/ogg", "ogg");
		mMap.put("application/pdf", "pdf");
		mMap.put("application/pgp", "pgp");
		mMap.put("application/pgp-encrypted", "pgp");
		mMap.put("application/pgp-keys", "pgp");
		mMap.put("application/pgp-signature", "sig");
		mMap.put("application/postscript", "ps ai eps");
		mMap.put("application/rdf+xml", "rdf");
		mMap.put("application/rdf", "rdf");
		mMap.put("application/rtf", "rtf");
		mMap.put("application/smil", "smil smi");
		mMap.put("application/srgs", "gram");
		mMap.put("application/srgs+xml", "grxml");
		mMap.put("application/vnd.mif", "mif");
		mMap.put("application/vnd.mozilla.xul+xml", "xul");
		mMap.put("application/vnd.ms-excel", "xls");
		mMap.put("application/vnd.ms-powerpoint", "ppt");
		mMap.put("application/vnd.ms-project", "mpp");
		mMap.put("application/vnd.ms-tnef", "tnef");
		mMap.put("application/vnd.rn-realmedia", "rm");
		mMap.put("application/vnd.wap.wbxml", "wbxml");
		mMap.put("application/vnd.wap.wmlc", "wmlc");
		mMap.put("application/vnd.wap.wmlscriptc", "wmlsc");
		mMap.put("application/voicexml+xml", "vxml");
		mMap.put("application/x-arj-compressed", "arj");
		mMap.put("application/x-bcpio", "bcpio");
		mMap.put("application/x-cdlink", "vcd");
		mMap.put("application/x-chess-pgn", "pgn");
		mMap.put("application/x-compress", "Z");
		mMap.put("application/x-cpio", "cpio");
		mMap.put("application/x-csh", "csh");
		mMap.put("application/x-debian-package", "deb");
		mMap.put("application/x-director", "dcr dir dxr");
		mMap.put("application/x-dvi", "dvi");
		mMap.put("application/x-futuresplash", "spl");
		mMap.put("application/x-gtar", "gtar");
		mMap.put("application/x-gunzip", "gz");
		mMap.put("application/x-gzip", "gz");
		mMap.put("application/x-hdf", "hdf");
		mMap.put("application/x-javascript", "js");
		mMap.put("application/x-koan", "skp skd skt skm");
		mMap.put("application/x-latex", "latex");
		mMap.put("application/x-mif", "mif");
		mMap.put("application/x-msdos-program", "exe");
		mMap.put("application/x-netcdf", "cdf nc");
		mMap.put("application/x-netcdf", "nc");
		mMap.put("application/x-perl", "pl pm");
		mMap.put("application/x-python", "py");
		mMap.put("application/x-rar-compressed", "rar");
		mMap.put("application/x-sh", "sh");
		mMap.put("application/x-shar", "shar");
		mMap.put("application/x-shockwave-flash", "swf");
		mMap.put("application/x-stuffit", "sit");
		mMap.put("application/x-sv4cpio", "sv4cpio");
		mMap.put("application/x-sv4crc", "sv4crc");
		mMap.put("application/x-tar", "tar");
		mMap.put("application/x-tar-gz", "tgz");
		mMap.put("application/x-tcl", "tcl");
		mMap.put("application/x-tex", "tex");
		mMap.put("application/x-texinfo", "texi texinfo");
		mMap.put("application/x-troff", "t tr troff");
		mMap.put("application/x-troff-man", "man");
		mMap.put("application/x-troff-me", "me");
		mMap.put("application/x-troff-ms", "ms");
		mMap.put("application/x-ustar", "ustar");
		mMap.put("application/x-wais-source", "src");
		mMap.put("application/x-zip-compressed", "zip");
		mMap.put("application/xhtml+xml", "xhtml xht");
		mMap.put("application/xhtml", "xhtml xht");
		mMap.put("application/xml", "xml");
		mMap.put("application/xml-dtd", "dtd");
		mMap.put("application/xslt+xml", "xslt");
		mMap.put("application/xslt", "xslt");
		mMap.put("application/zip", "zip");
		mMap.put("audio/basic", "au");
		mMap.put("audio/midi", "mid midi");
		mMap.put("audio/mpeg", "mpa");
		mMap.put("audio/ulaw", "au snd");
		mMap.put("audio/x-aiff", "aif");
		mMap.put("audio/x-mpegurl", "m3u");
		mMap.put("audio/x-pn-realaudio", "ram");
		mMap.put("audio/x-wav", "wav");
		mMap.put("chemical/x-pdb", "pdb");
		mMap.put("chemical/x-xyz", "xyz");
		mMap.put("image/bmp", "bmp");
		mMap.put("image/cgm", "cgm");
		mMap.put("image/g3fax", "fax");
		mMap.put("image/gif", "gif");
		mMap.put("image/ief", "ief");
		mMap.put("image/jpeg", "jpg");
		mMap.put("image/png", "png");
		mMap.put("image/svg+xml", "svg");
		mMap.put("image/tiff", "tif");
		mMap.put("image/vnd.djvu", "djvu");
		mMap.put("image/vnd.wap.wbmp", "wbmp");
		mMap.put("image/x-cmu-raster", "ras");
		mMap.put("image/x-icon", "ico");
		mMap.put("image/x-portable-anymap", "pnm");
		mMap.put("image/x-portable-bitmap", "pbm");
		mMap.put("image/x-portable-graymap", "pgm");
		mMap.put("image/x-portable-pixmap", "ppm");
		mMap.put("image/x-rgb", "rgb");
		mMap.put("image/x-xbitmap", "xbm");
		mMap.put("image/x-xpixmap", "xpm");
		mMap.put("image/x-xwindowdump", "xwd");
		mMap.put("model/iges", "igs");
		mMap.put("model/mesh", "msh");
		mMap.put("model/vrml", "vrml");
		mMap.put("text/calendar", "ics");
		mMap.put("text/css", "css");
		mMap.put("text/html", "html");
		mMap.put("text/plain", "txt");
		mMap.put("text/richtext", "rtx");
		mMap.put("text/rtf", "rtf");
		mMap.put("text/sgml", "sgml");
		mMap.put("text/tab-separated-values", "tsv");
		mMap.put("text/vnd.wap.wml", "wml");
		mMap.put("text/vnd.wap.wmlscript", "wmls");
		mMap.put("text/x-setext", "etx");
		mMap.put("text/xml", "xml");
		mMap.put("video/dl", "dl");
		mMap.put("video/fli", "fli");
		mMap.put("video/gl", "gl");
		mMap.put("video/mpeg", "mpg");
		mMap.put("video/quicktime", "mov");
		mMap.put("video/vnd.mpegurl", "mxu");
		mMap.put("video/x-msvideo", "avi");
		mMap.put("video/x-sgi-movie", "movie");
		mMap.put("x-conference/x-cooltalk", "ice");
		mMap.put("x-world/x-vrml", "vrml");
		mimeMap = Collections.unmodifiableMap(mMap);
	}

	public static String get(String mime) {
		return mimeMap.containsKey(mime) ? "." + mimeMap.get(mime) : ".unkn";
	}
}
